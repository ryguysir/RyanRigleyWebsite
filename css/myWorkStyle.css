:root {
  --second-color: rgb(109, 200, 228);
  --third-color: rgb(179, 179, 255);
  --fourth-color: #eba2a8;
  --offWhite-color: rgba(235, 235, 235, 1);
  --darkBlue: #2c3e50;

  --main-tag-color: #56799c;
  --limeGreen: rgba(0, 193, 102, 1);
  --text-color: #1d2a36;
  --text-color-hover: #b8dcff;
  --transition-time: 0.25s;

  --card-transition-time: 0.25s;
}

html,
body {
  font-family: "Poppins", sans-serif;
  display: flex;
  flex-flow: column;
  margin: 0px;
  padding: 0px;
  overflow: auto;
}

#siteContainer {
  height: 100vh;
}

#background {
  position: absolute;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  z-index: -302;
  background: #2c3e50;
}

#returnBox {
  display: flex;
  margin: 5%;
  align-items: center;
  justify-content: center;
}

#returnArrow {
  position: relative;
  background: var(--offWhite-color);
  width: 40px;
  height: 40px;

  clip-path: polygon(56% 4%, 60% 0%, 100% 50%, 60% 100%, 56% 96%, 94% 50%);
  transform: rotate(180deg);
}
#returnArrowText {
  transition: all 0.2s ease-out;
  position: relative;
  color: var(--offWhite-color);
  user-select: none;
  cursor: pointer;
  text-decoration: none;
  font-size: 1.5em;
}
#returnArrowText:hover {
  transform: scale(1.05);
}

#loopingLottie {
  position: relative;
  margin: 0 auto;
  top: -20%;
  transform-origin: center;
  transform: scale(0.5);
}

#videoPlayer {
  animation: videoPlayerPopUp 1s ease-in-out;
  position: fixed;
  width: fit-content;
  height: fit-content;
  border-radius: 25px;
  padding: 20px;

  display: flex;
  align-items: center;
  justify-content: center;

  left: 50%;
  top: 95%;
  transform: translateX(-50%) translateY(-100%);

  background: #f6cb4a;
}
#videoPlayer::before {
  content: "";
  position: absolute;
  width: 25%;
  height: 20%;

  left: 50%;
  top: 100%;
  transform: translateX(-50%);

  background: linear-gradient(0deg, hsl(44, 99%, 36%), #edb201);
}

#videoPlayer iframe {
  max-height: 100%;
  max-width: 100%;
  border: 10px rgb(200, 200, 200) solid;
  border-radius: 10px;
  box-shadow: rgba(255, 255, 255, 0.75) 0px 0px 10px;
}

.videoInlay {
  min-width: 100%;
  min-height: 360px;
  border: none;
}

#searchBoxContainer {
  animation: fadeInScaleIn 1s ease-in-out;
  display: none;
  width: 100%;
  position: relative;
}

#searchBoxFlex {
  position: relative;
  margin: 0 auto;
  width: fit-content;
  display: flex;
  border-radius: 5px;
  justify-content: center;
  align-items: center;
  justify-items: center;
  align-content: center;
  box-shadow: rgba(0, 0, 0, 1) 0px 20px 50px;
}

#searchBox {
  text-decoration: none;
  border: none;
  border-radius: 5px;
  width: 150px;
  height: 35px;
  margin: 0.5em;
}
#searchBox:focus {
  outline-width: 0;
}

#searchSubmit {
  user-select: none;
  position: relative;
  color: white;
  transition: background 0.25s ease-out;
  font-weight: 300;
  text-align: center;
  border-radius: 5px;
  padding: 0.5em 1em 0.5em 1em;
  margin: 0.5em;
  background: var(--third-color);
  box-shadow: rgba(50, 50, 93, 0.25) 0px 30px 60px -12px inset,
    rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset;
  cursor: pointer;
}
#searchSubmit:hover {
  background: var(--second-color);
}

#cardContainer {
  position: relative;
  width: 90vw;
  height: 100vh;
  left: 50%;
  transform: translateX(-50%);
  margin-top: 50px;
  display: grid;
  justify-content: center;
  justify-items: center;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: auto;
  grid-gap: 40px 0px;
}

.card {
  animation: fadeInScaleIn 1s ease-in-out;
  transition: all var(--card-transition-time) ease-out;
  /*   makes it so this card only takes up 1 grid space */
  grid-area: span 1;

  /*standard poster size aspect is 4x6 */
  width: 310px;
  height: 450px;
  margin-top: 10px;

  /*   this sets the border so that both the inside and outside can have a border radius */
  box-shadow: 0 0 0 2px rgb(200, 200, 200), 0 0 100px rgba(0, 0, 0, 0.5) inset,
    0 0 20px rgba(0, 0, 0, 0.1);
  border-radius: 7px;

  /*   card color properties */
  background: rgb(230, 230, 230);

  /*   internal card styling   */
  overflow: hidden;
  backface-visibility: hidden;
  cursor: pointer;
  transform: scale(1);
}
.cardGradient {
  content: "";
  position: absolute;
  width: inherit;
  height: inherit;
  z-index: 0;
  background: linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, rgba(0, 0, 0, 0.75) 100%);
}
.card:hover {
  box-shadow: 0 0 0 4px var(--limeGreen), 0 0 100px rgba(0, 0, 0, 0.5) inset,
    0 0 50px rgba(0, 0, 0, 0.5);
  transform: scale(1.025);
}
.card img {
  transition: all var(--card-transition-time) ease-out;
  /*   sets the image to fill the entire card and crop excess */
  height: 100%;
  width: 100%;
  object-fit: cover;

  /*   image adjustments */
  filter: blur(2px) contrast(0.5) brightness(1.25) grayscale(50%);
  mix-blend-mode: multiply;
}
.card:hover > img {
  filter: blur(0px) contrast(1) brightness(1.25) grayscale(0%);
}
.cardText {
  transition: all var(--card-transition-time) ease-out;
  position: absolute;
  left: 50%;
  transform: translatex(-50%);
  width: 90%;
  height: inherit;
  z-index: 1;
  text-align: center;
  display: grid;
  justify-items: center;
  align-items: center;
  grid-template-rows: 3fr 1fr 1fr;
  user-select: none;
}
.card:hover > .cardText > :is(h2, h3) {
  opacity: 0;
}
.card h2 {
  transition: all var(--card-transition-time) ease-out;
  position: relative;
  font-weight: 400;
  color: white;
  grid-row: 2/3;
}
.card h3 {
  transition: all var(--card-transition-time) ease-out;
  position: relative;
  font-weight: 200;
  font-size: 75%;
  color: white;
  grid-row: 3/3;
}

.nextVid {
  position: relative;
  float: right;
  width: 40px;
  height: 20px;
  background: red;
  margin: 10px;
}
.prevVideo {
  position: relative;
  float: left;
  width: 40px;
  height: 20px;
  background: green;
  margin: 10px;
}

.lottiePlayBttn {
  transition: all var(--card-transition-time) ease-out;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 200px;
  height: 200px;
  z-index: 3;
  opacity: 0.5;
}

.award {
  position: relative;
  margin: 0 auto;
  height: 200px;
  width: 200px;
}

.xCloseButton {
  transition: all 0.5s ease-out;
  width: 25px;
  height: 25px;
  margin: 10px 0px 0px 20px;
  position: relative;
  cursor: pointer;
  opacity: 0.5;
}
.xCloseButton:hover {
  opacity: 1;
  transform: scale(1.5);
}

#tagContainer {
  animation: fadeInScaleIn 1s ease-in-out;
  padding-top: 10px;
  width: 90%;
  margin: 0 auto;
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  grid-template-rows: repeat(3, 1fr);
  grid-gap: 10px;
}

.tag {
  color: var(--text-color);
  transition: all var(--transition-time) ease-out;
  position: relative;
  height: 30px;
  background: var(--main-tag-color);
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 5px;
  font-weight: 300;
  overflow: hidden;
  user-select: none;
  cursor: pointer;
  white-space: nowrap;
}

.tag:hover {
  box-shadow: 10px 10px 10px rgba(0, 0, 0, 0.15) inset,
    -1px -1px 3px rgba(255, 255, 255, 0.35) inset;
}
.tag::after {
  content: "";
  transition: all var(--transition-time) ease-out;
  position: absolute;
  background: var(--limeGreen);
  width: 100%;
  height: 100px;
  border-radius: 100%;
  mix-blend-mode: overlay;
  left: -100%;
  cursor: pointer;
}
.tag:hover::after {
  border-radius: 0%;
  left: 0%;
}

.tagToggled {
  background: var(--limeGreen);
}

.a2z {
  grid-column: 5;
}

@keyframes fadeInScaleIn {
  0% {
    opacity: 0;
    transform: scale(0.25, 0);
  }
  100% {
    opacity: 1;
    transform: scale(1, 1);
  }
}

@keyframes videoPlayerPopUp {
  0% {
    opacity: 0;
    top: 160%;
  }
  100% {
    opacity: 1;
    top: 95%;
  }
}

@keyframes left2right {
  0% {
    left: -100%;
  }
  50% {
    left: 0%;
  }
  100% {
    left: -100%;
  }
}

@keyframes right2left {
  0% {
    left: 0%;
  }
  50% {
    left: -50%;
  }
  100% {
    left: 0%;
  }
}

@keyframes backgroundFadeIn {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@keyframes tagCircle {
  0% {
    transform: translateX(-50%) translateY(-50%) scale(0);
  }
  100% {
    transform: translateX(-50%) translateY(-50%) scale(4);
    opacity: 0;
  }
}
